#ifndef IMG_H
#define IMG_H

#include <stdint.h>

#if 1

typedef struct img_data
{
    uint32_t d[16];
} img_data;


#ifdef IMG_DEFINE_DATA

#define DEFINE_IMG_ROW(x) (uint32_t)( \
    (((x >> (4* 0)) & 0x3) << 30) | \
    (((x >> (4* 1)) & 0x3) << 28) | \
    (((x >> (4* 2)) & 0x3) << 26) | \
    (((x >> (4* 3)) & 0x3) << 24) | \
    (((x >> (4* 4)) & 0x3) << 22) | \
    (((x >> (4* 5)) & 0x3) << 20) | \
    (((x >> (4* 6)) & 0x3) << 18) | \
    (((x >> (4* 7)) & 0x3) << 16) | \
    (((x >> (4* 8)) & 0x3) << 14) | \
    (((x >> (4* 9)) & 0x3) << 12) | \
    (((x >> (4*10)) & 0x3) << 10) | \
    (((x >> (4*11)) & 0x3) <<  8) | \
    (((x >> (4*12)) & 0x3) <<  6) | \
    (((x >> (4*13)) & 0x3) <<  4) | \
    (((x >> (4*14)) & 0x3) <<  2) | \
    (((x >> (4*15)) & 0x3) <<  0) | \
    0)

#define DEFINE_IMG(\
    x0, x1, x2, x3, x4, x5, x6, x7, \
    x8, x9, xa, xb, xc, xd, xe, xf, \
    dummy) { \
    { \
    DEFINE_IMG_ROW(0x##x0##ULL), \
    DEFINE_IMG_ROW(0x##x1##ULL), \
    DEFINE_IMG_ROW(0x##x2##ULL), \
    DEFINE_IMG_ROW(0x##x3##ULL), \
    DEFINE_IMG_ROW(0x##x4##ULL), \
    DEFINE_IMG_ROW(0x##x5##ULL), \
    DEFINE_IMG_ROW(0x##x6##ULL), \
    DEFINE_IMG_ROW(0x##x7##ULL), \
    DEFINE_IMG_ROW(0x##x8##ULL), \
    DEFINE_IMG_ROW(0x##x9##ULL), \
    DEFINE_IMG_ROW(0x##xa##ULL), \
    DEFINE_IMG_ROW(0x##xb##ULL), \
    DEFINE_IMG_ROW(0x##xc##ULL), \
    DEFINE_IMG_ROW(0x##xd##ULL), \
    DEFINE_IMG_ROW(0x##xe##ULL), \
    DEFINE_IMG_ROW(0x##xf##ULL), \
    } }

static img_data const IMG_DATA[] =
{
    /* pawn */
    DEFINE_IMG(
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0000000110000000,
    0000001231000000,
    0000012333100000,
    0000012333100000,
    0000001231000000,
    0000001231000000,
    0000012333100000,
    0000012333100000,
    0000122233310000,
    0000111111110000,
    ),

    /* knight */
    DEFINE_IMG(
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0000000010100000,
    0000000111100000,
    0000001223310000,
    0000012233131000,
    0000012333331000,
    0000123332333100,
    0000123331233100,
    0000123331223100,
    0001223333111000,
    0001223333100000,
    0001222333310000,
    0001222223310000,
    0001111111110000,
    ),

    /* bishop */
    DEFINE_IMG(
    0000000000000000,
    0000000000000000,
    0000001001000000,
    0000012112100000,
    0000123312310000,
    0000123312310000,
    0001231331231000,
    0001211131231000,
    0001231331231000,
    0001231331231000,
    0000123312310000,
    0000011111100000,
    0111122222211110,
    0122233333333210,
    0123331111233310,
    0011110000111100,
    ),

    /* rook */
    DEFINE_IMG(
    0000000000000000,
    0000000000000000,
    0000000000000000,
    0011101111011100,
    0012111231113100,
    0012223333333100,
    0001111111111000,
    0000122223310000,
    0000122333310000,
    0000123333310000,
    0000123333310000,
    0000111111110000,
    0001222333331000,
    0001111111111000,
    0012222223333100,
    0011111111111100,
    ),

    /* queen */
    DEFINE_IMG(
    1100000110000011,
    1210001231000121,
    1231012333101231,
    0123122333312310,
    0123312233123310,
    0012331221223100,
    0012311111122100,
    0011123333311100,
    0122233333333310,
    0012222333333100,
    0001111111111000,
    0012223333333100,
    0111112333111110,
    0122221111233310,
    0011222233331100,
    0000111111110000,
    ),

    /* king */
    DEFINE_IMG(
    0000000110000000,
    0011100110011100,
    0123311111123310,
    1233311111123331,
    1223333112233331,
    0122333112222310,
    0012211111122100,
    0011123333311100,
    0122233333333310,
    0012222333333100,
    0001111111111000,
    0012223333333100,
    0111112333111110,
    0122221111233310,
    0011222233331100,
    0000111111110000,
    ),

};

#endif

#else
typedef struct img_data
{
    uint8_t d[8];
} img_data;

#ifdef IMG_DEFINE_DATA

#define DEFINE_IMG_ROW(x) (uint8_t)( \
    ((((x >> (4*0)) & 0xf) != 0 ? 1 : 0) << 0x7) | \
    ((((x >> (4*1)) & 0xf) != 0 ? 1 : 0) << 0x6) | \
    ((((x >> (4*2)) & 0xf) != 0 ? 1 : 0) << 0x5) | \
    ((((x >> (4*3)) & 0xf) != 0 ? 1 : 0) << 0x4) | \
    ((((x >> (4*4)) & 0xf) != 0 ? 1 : 0) << 0x3) | \
    ((((x >> (4*5)) & 0xf) != 0 ? 1 : 0) << 0x2) | \
    ((((x >> (4*6)) & 0xf) != 0 ? 1 : 0) << 0x1) | \
    ((((x >> (4*7)) & 0xf) != 0 ? 1 : 0) << 0x0) | \
    0)

#define DEFINE_IMG(x0, x1, x2, x3, x4, x5, x6, x7, dummy) { \
    { \
    DEFINE_IMG_ROW(0x##x0), \
    DEFINE_IMG_ROW(0x##x1), \
    DEFINE_IMG_ROW(0x##x2), \
    DEFINE_IMG_ROW(0x##x3), \
    DEFINE_IMG_ROW(0x##x4), \
    DEFINE_IMG_ROW(0x##x5), \
    DEFINE_IMG_ROW(0x##x6), \
    DEFINE_IMG_ROW(0x##x7), \
    } }

static img_data const IMG_DATA[] =
{
    /* pawn */
    DEFINE_IMG(
    00000000,
    00000000,
    00000000,
    00011000,
    00111100,
    00011000,
    00111100,
    01111110,
    ),

    /* knight */
    DEFINE_IMG(
    00000000,
    01111000,
    00110110,
    01111110,
    01111000,
    01111100,
    00111110,
    00111110,
    ),

    /* bishop */
    DEFINE_IMG(
    00001000,
    00011000,
    00110100,
    00111100,
    00011000,
    00111100,
    00111100,
    01111110,
    ),

    /* rook */
    DEFINE_IMG(
    00000000,
    00000000,
    01011010,
    01111110,
    01111110,
    00111100,
    00111100,
    01111110,
    ),

    /* queen */
    DEFINE_IMG(
    10100101,
    01011010,
    00111100,
    00011000,
    00011000,
    00011000,
    00111100,
    01111110,
    ),

    /* king */
    DEFINE_IMG(
    00011000,
    00111100,
    00011000,
    01111110,
    00111100,
    00011000,
    00111100,
    01111110,
    ),

};

#endif
#endif

#endif
